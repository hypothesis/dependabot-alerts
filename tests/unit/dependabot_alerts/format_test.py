from unittest.mock import sentinel

import pytest

from dependabot_alerts.format import format_slack, format_text


class TestFormatText:
    def test_with_no_alerts(self):
        assert not format_text([], sentinel.organization)

    def test_with_alerts(self, alerts):
        assert format_text(alerts, sentinel.organization) == "\n".join(
            [
                "organization/foo GHSA-1 alerts:1 severity:low package_1 html_url_1 summary_1",
                "organization/bar GHSA-2 alerts:3 severity:high package_2 html_url_2 summary_2",
            ]
        )


class TestFormatSlack:
    def test_with_no_alerts(self):
        assert (
            format_slack([], "hypothesis")
            == "There are no Dependabot security alerts in the hypothesis GitHub organization."
        )

    def test_with_alerts(self, alerts):
        assert format_slack(alerts, "hypothesis") == "\n".join(
            [
                "There are Dependabot security alerts in the hypothesis GitHub organization:",
                "",
                "<html_url_1|organization/foo GHSA-1> alerts:1 severity:low `package_1` summary_1",
                "<html_url_2|organization/bar GHSA-2> alerts:3 severity:high `package_2` summary_2",
                "",
                "Message generated by the `alerts.yml` workflow <https://github.com/hypothesis/dependabot-alerts/blob/main/.github/workflows/alert.yml|in dependabot-alerts>",
            ]
        )


@pytest.fixture
def alerts(alert_factory):
    return [
        alert_factory(
            organization="organization",
            repo="foo",
            ghsa_id="GHSA-1",
            package="package_1",
            html_url="html_url_1",
            summary="summary_1",
            severity="low",
        ),
        alert_factory(
            organization="organization",
            repo="bar",
            ghsa_id="GHSA-2",
            package="package_2",
            html_url="html_url_2",
            summary="summary_2",
            severity="high",
            duplicates=2,
        ),
    ]
