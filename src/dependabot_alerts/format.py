"""Functions for serializing lists of Alerts into different string formats."""

from dependabot_alerts.core import Alert


def format_text(alerts: list[Alert], _organization: str) -> str:
    return "\n".join(
        [
            " ".join(
                [
                    alert.repo_full_name,
                    alert.ghsa_id,
                    f"alerts:{len(alert.duplicates) + 1}",
                    f"severity:{alert.severity}",
                    alert.package,
                    alert.html_url,
                    alert.summary,
                ]
            )
            for alert in alerts
        ]
    )


def format_slack(alerts: list[Alert], organization: str) -> str:
    if not alerts:
        return f"There are no Dependabot security alerts in the {organization} GitHub organization."

    return "\n".join(
        [
            f"There are Dependabot security alerts in the {organization} GitHub organization:",
            "",
            *[
                " ".join(
                    [
                        f"<{alert.html_url}|{alert.repo_full_name} {alert.ghsa_id}>",
                        f"alerts:{len(alert.duplicates) + 1}",
                        f"severity:{alert.severity}",
                        f"`{alert.package}`",
                        alert.summary,
                    ]
                )
                for alert in alerts
            ],
            "",
            "Message generated by the `alerts.yml` workflow <https://github.com/hypothesis/dependabot-alerts/blob/main/.github/workflows/alert.yml|in dependabot-alerts>",
        ]
    )
